% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tiles.R
\name{mp_get_tiles}
\alias{mp_get_tiles}
\title{Get basemap tiles from map servers}
\usage{
mp_get_tiles(
  x,
  provider = "OpenStreetMap",
  zoom,
  crop = FALSE,
  verbose = FALSE,
  apikey,
  cachedir,
  forceDownload = FALSE
)
}
\arguments{
\item{x}{an sf or sfc object.}

\item{provider}{the tile server from which to get the map. It can be a name
(see Details for providers) or a named list like this one: \code{
provider = list(src = "name of the source",
q = "server address", sub = "subdomains", cit = "how to cite the tiles")}
(see Examples).}

\item{zoom}{the zoom level.}

\item{crop}{TRUE if results should be cropped to the specified x extent,
FALSE otherwise. If x is an sf object with one POINT, crop is set to FALSE.}

\item{verbose}{if TRUE, tiles filepaths, zoom level and citation are displayed.}

\item{apikey}{Needed for Thunderforest maps.}

\item{cachedir}{name of a directory used to cache tiles. If not set, tiles
are cached in a \link[base:tempdir]{tempdir} folder.}

\item{forceDownload}{if TRUE, existing cached tiles may be overwritten}
}
\value{
A SpatRaster is returned.
}
\description{
Get map tiles based on a spatial object extent. Maps can be
fetched from various map servers.
}
\details{
Zoom levels are described on the OpenStreetMap wiki:
\url{http://wiki.openstreetmap.org/wiki/Zoom_levels}. \cr\cr
Providers: "OpenStreetMap.MapnikBW", "OpenStreetMap", "OpenStreetMap.DE",
"OpenStreetMap.France", "OpenStreetMap.HOT", "OpenTopoMap", "Stamen.Toner",
"Stamen.TonerBackground", "Stamen.TonerHybrid", "Stamen.TonerLines",
"Stamen.TonerLabels", "Stamen.TonerLite", "Stamen.Watercolor",
"Stamen.Terrain", "Stamen.TerrainBackground", "Stamen.TerrainLabels",
"Esri.WorldStreetMap", "Esri.DeLorme", "Esri.WorldTopoMap", "Esri.WorldImagery",
"Esri.WorldTerrain", "Esri.WorldShadedRelief", "Esri.OceanBasemap",
"Esri.NatGeoWorldMap", "Esri.WorldGrayCanvas", "CartoDB.Positron",
"CartoDB.PositronNoLabels", "CartoDB.PositronOnlyLabels", "CartoDB.DarkMatter",
"CartoDB.DarkMatterNoLabels", "CartoDB.DarkMatterOnlyLabels",
"CartoDB.Voyager", "CartoDB.VoyagerNoLabels", "CartoDB.VoyagerOnlyLabels",
"HikeBike", "Wikimedia", "Thunderforest.OpenCycleMap", "Thunderforest.Transport",
"Thunderforest.TransportDark", "Thunderforest.SpinalMap", "Thunderforest.Landscape",
"Thunderforest.Outdoors", "Thunderforest.Pioneer", "Thunderforest.MobileAtlas",
"Thunderforest.Neighbourhood"
}
\examples{
library(sf)
library(maptiles)
nc <- st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
nc_osm <- mp_get_tiles(nc, crop = TRUE)
mp_tiles(nc_osm)

# Download esri tiles
fullserver <- paste("https://server.arcgisonline.com/ArcGIS/rest/services",
                   "Specialty/DeLorme_World_Base_Map/MapServer",
                   "tile/{z}/{y}/{x}.jpg",
                   sep = "/")
esri <-  list(
  src = 'esri',
  q = fullserver,
  sub = NA,
  cit = 'Tiles: Esri; Copyright: 2012 DeLorme'
)
nc_ESRI <- mp_get_tiles(x = nc, provider = esri, crop = TRUE, verbose = TRUE)
# Plot the tiles
mp_tiles(nc_ESRI)
txt <- esri$cit
mtext(text = txt, side = 1, adj = 0, cex = .9, font = 3)
}
